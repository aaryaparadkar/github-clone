{
  "address": "0x9395dE3a6b0bb8B23B2e12e4574798e1846D9266",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prize",
          "type": "uint256"
        }
      ],
      "name": "IssueCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pullReqId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "solver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prize",
          "type": "uint256"
        }
      ],
      "name": "IssueSolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pullReqId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "StakePlaced",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "username",
          "type": "string"
        }
      ],
      "name": "addUserToWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        }
      ],
      "name": "closeIssueNoSolver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "prize",
          "type": "uint256"
        }
      ],
      "name": "createIssue",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundContract",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBasicWalletDetails",
      "outputs": [
        {
          "internalType": "string",
          "name": "gitUsername",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "lostStakeCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wonStakeCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeductionFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "approx_amt",
          "type": "uint256"
        }
      ],
      "name": "getEstDeductionRateOnIssue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        }
      ],
      "name": "getIssue",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "prize",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "solved",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "solver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stakeCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalStakeAmt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIssueStats",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalPriceAmt_SetByMe",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "openPriceAmt_SetByMe",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalIssues_SetByMe",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "openIssues_SetByMe",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardsWalletDetails",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rewardsEarned",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "withdraw_proceedings",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lost_refund",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSoldTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getStake",
      "outputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        }
      ],
      "name": "getStakeCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakingWalletDetails",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalAmtStaked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "openAmtStaked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalStakes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "openStakes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        }
      ],
      "name": "getTotalStakeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        }
      ],
      "name": "getTotalStakers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pullReqId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "solver",
          "type": "address"
        }
      ],
      "name": "markSolved",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pullReqId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "solver",
          "type": "address"
        }
      ],
      "name": "rejectOthers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "repos",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "issueCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "requestTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pullReqId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "stakeOnIssue",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "wallets",
      "outputs": [
        {
          "internalType": "string",
          "name": "gitUsername",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "lostStakeCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wonStakeCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmtStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openAmtStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalStakes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openStakes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rewardsEarned",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdraw_proceedings",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lost_refund",
              "type": "uint256"
            }
          ],
          "internalType": "struct GitHubStaking.WalletStats",
          "name": "stats",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "totalPriceAmt_SetByMe",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openPriceAmt_SetByMe",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalIssues_SetByMe",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openIssues_SetByMe",
              "type": "uint256"
            }
          ],
          "internalType": "struct GitHubStaking.IssueStats",
          "name": "issueStats",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw_reward",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x87549ff1dcdf0ded5d84ac8015e6ccb2e05a7b525fc5c9717d216ffd72d62435",
  "receipt": {
    "to": null,
    "from": "0xBD23fF24cd87001E70cBaB9DC8d55798ABe94F0B",
    "contractAddress": "0x9395dE3a6b0bb8B23B2e12e4574798e1846D9266",
    "transactionIndex": 48,
    "gasUsed": "3118624",
    "logsBloom": "0x
    "blockHash": "0x62833eaeb07035ecdcc5267742aef442698060f783da9ee66db0fe9a538f054a",
    "transactionHash": "0x87549ff1dcdf0ded5d84ac8015e6ccb2e05a7b525fc5c9717d216ffd72d62435",
    "logs": [],
    "blockNumber": 6751728,
    "cumulativeGasUsed": "12988691",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x72ebf177e18f3CBa29a82aE50c3Ee24b12dfeAB3"
  ],
  "numDeployments": 6,
  "solcInputHash": "f5786881ac6e756bdae8bd91b9806769",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prize\",\"type\":\"uint256\"}],\"name\":\"IssueCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pullReqId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"solver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prize\",\"type\":\"uint256\"}],\"name\":\"IssueSolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pullReqId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"StakePlaced\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"addUserToWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"}],\"name\":\"closeIssueNoSolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prize\",\"type\":\"uint256\"}],\"name\":\"createIssue\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundContract\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBasicWalletDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"gitUsername\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"lostStakeCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wonStakeCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeductionFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"approx_amt\",\"type\":\"uint256\"}],\"name\":\"getEstDeductionRateOnIssue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"}],\"name\":\"getIssue\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"prize\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"solved\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"solver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakeAmt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIssueStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalPriceAmt_SetByMe\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPriceAmt_SetByMe\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalIssues_SetByMe\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openIssues_SetByMe\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardsWalletDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardsEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdraw_proceedings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lost_refund\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSoldTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"}],\"name\":\"getStakeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingWalletDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAmtStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openAmtStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openStakes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"}],\"name\":\"getTotalStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"}],\"name\":\"getTotalStakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pullReqId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"solver\",\"type\":\"address\"}],\"name\":\"markSolved\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pullReqId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"solver\",\"type\":\"address\"}],\"name\":\"rejectOthers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"repos\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"issueCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"requestTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pullReqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"stakeOnIssue\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wallets\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"gitUsername\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lostStakeCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wonStakeCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmtStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openAmtStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openStakes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardsEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdraw_proceedings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lost_refund\",\"type\":\"uint256\"}],\"internalType\":\"struct GitHubStaking.WalletStats\",\"name\":\"stats\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalPriceAmt_SetByMe\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPriceAmt_SetByMe\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalIssues_SetByMe\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openIssues_SetByMe\",\"type\":\"uint256\"}],\"internalType\":\"struct GitHubStaking.IssueStats\",\"name\":\"issueStats\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw_reward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GitHubStaking.sol\":\"GitHubStaking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/GitHubStaking.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.2 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract GitHubStaking {\\n    struct Stake {\\n        address staker;\\n        uint amt;\\n        uint pullReqId;\\n    }\\n    struct Issue {\\n        address creator;\\n        uint prize;\\n        bool solved;\\n        address solver;\\n        uint stakeCount;\\n        uint totalStakeAmt;\\n        mapping(uint => Stake) stakes; // index -> konsa address, kitna stakeAmt\\n    }\\n\\n    struct Repo {\\n        mapping(uint => Issue) issues;\\n        uint issueCount;\\n    }\\n    struct WalletStats {\\n        uint lostStakeCount;\\n        uint wonStakeCount;\\n        uint totalAmtStaked;\\n        uint openAmtStaked;\\n        uint totalStakes;\\n        uint openStakes;\\n        uint rewardsEarned;\\n        uint withdraw_proceedings;\\n        uint lost_refund;\\n    }\\n\\n    struct IssueStats {\\n        uint totalPriceAmt_SetByMe;\\n        uint openPriceAmt_SetByMe;\\n        uint totalIssues_SetByMe;\\n        uint openIssues_SetByMe;\\n    }\\n\\n    struct Wallet {\\n        string gitUsername;\\n        WalletStats stats;\\n        IssueStats issueStats;\\n    }\\n\\n    mapping(uint => Repo) public repos; // RepoId -> Repo\\n    mapping(address => Wallet) public wallets;\\n\\n    uint256 private constant MIN_PRIZE = 5;\\n    uint private constant DEDUCTION_FACTOR = 10;\\n    uint256 private constant MIN_STAKE = 10;\\n    uint private soldTokens = 0;\\n\\n    IERC20 public s_token;\\n    address public immutable i_owner;\\n\\n    // events\\n    event IssueCreated(\\n        uint256 indexed repoId,\\n        uint256 indexed issueId,\\n        address indexed creator,\\n        uint256 prize\\n    );\\n\\n    event IssueSolved(\\n        uint256 indexed repoId,\\n        uint256 indexed issueId,\\n        uint256 pullReqId,\\n        address creator,\\n        address indexed solver,\\n        uint256 prize\\n    );\\n\\n    event StakePlaced(\\n        uint256 indexed repoId,\\n        uint256 indexed issueId,\\n        uint256 pullReqId,\\n        address indexed staker,\\n        uint256 amt\\n    );\\n\\n    constructor(address token) {\\n        s_token = IERC20(token);\\n        i_owner = msg.sender;\\n    }\\n\\n    function addUserToWallet(address wallet, string memory username) public {\\n        wallets[wallet].gitUsername = username;\\n    }\\n\\n    function requestTokens(address to, uint amt) public {\\n        bool success = s_token.transfer(to, amt);\\n        require(success);\\n        soldTokens = soldTokens + amt;\\n    }\\n\\n    function fundContract() public payable {\\n        require(msg.sender == i_owner);\\n        bool success = s_token.transferFrom(\\n            msg.sender,\\n            address(this),\\n            msg.value\\n        );\\n        require(success);\\n    }\\n\\n    // Create a new issue with a prize\\n    function createIssue(\\n        uint repoId,\\n        uint issueId,\\n        uint256 prize\\n    ) public payable {\\n        // require(\\n        //     wallets[msg.sender].gitUsername != \\\"\\\",\\n        //     \\\"Wallet not found in contract.\\\"\\n        // );\\n\\n        Repo storage repo = repos[repoId];\\n        Issue storage issue = repo.issues[issueId];\\n        require(issue.creator == address(0), \\\"Issue already exists\\\");\\n        require(prize >= MIN_PRIZE, \\\"Prize amount must be greater than 5\\\");\\n\\n        bool success = s_token.transferFrom(msg.sender, address(this), prize);\\n        if (success) {\\n            issue.creator = msg.sender;\\n            issue.prize = prize;\\n            issue.solved = false;\\n            issue.solver = address(0);\\n            issue.stakeCount = 0;\\n            issue.totalStakeAmt = 0;\\n            repo.issueCount++;\\n\\n            wallets[msg.sender].issueStats.totalIssues_SetByMe++;\\n            wallets[msg.sender].issueStats.openIssues_SetByMe++;\\n\\n            wallets[msg.sender].issueStats.totalPriceAmt_SetByMe =\\n                wallets[msg.sender].issueStats.totalPriceAmt_SetByMe +\\n                prize;\\n            wallets[msg.sender].issueStats.openPriceAmt_SetByMe =\\n                wallets[msg.sender].issueStats.openPriceAmt_SetByMe +\\n                prize;\\n\\n            emit IssueCreated(repoId, issueId, msg.sender, prize);\\n        }\\n    }\\n\\n    // Stake an amount on an issue\\n    function stakeOnIssue(\\n        uint repoId,\\n        uint issueId,\\n        uint pullReqId,\\n        uint256 amt\\n    ) public payable {\\n        require(amt >= MIN_STAKE, \\\"Min Stake Amount is 0.01 GST.\\\");\\n        Issue storage issue = repos[repoId].issues[issueId];\\n        require(issue.creator != msg.sender, \\\"Issue creator cannot stake.\\\");\\n        require(issue.creator != address(0), \\\"Issue does not exist\\\"); //address(0) represents the zero address in Solidity.\\n        require(issue.creator != msg.sender, \\\"Issue creator cannot stake\\\");\\n        require(!issue.solved, \\\"Issue already solved\\\");\\n        bool success = s_token.transferFrom(msg.sender, address(this), amt);\\n        if (success) {\\n            issue.stakeCount++;\\n            issue.stakes[issue.stakeCount].pullReqId = pullReqId;\\n            issue.stakes[issue.stakeCount].staker = msg.sender;\\n            issue.stakes[issue.stakeCount].amt = amt;\\n            issue.totalStakeAmt += amt;\\n\\n            wallets[msg.sender].stats.totalAmtStaked += amt;\\n            wallets[msg.sender].stats.openAmtStaked += amt;\\n\\n            wallets[msg.sender].stats.totalStakes++;\\n            wallets[msg.sender].stats.openStakes++;\\n\\n            emit StakePlaced(repoId, issueId, pullReqId, msg.sender, amt);\\n        }\\n    }\\n\\n    function closeIssueNoSolver(uint repoId, uint issueId) public {\\n        Issue storage issue = repos[repoId].issues[issueId];\\n        require(issue.creator != address(0), \\\"Issue does not exist\\\");\\n        issue.solved = true;\\n        bool success = s_token.transferFrom(\\n            address(this),\\n            issue.creator,\\n            issue.prize\\n        );\\n        require(success);\\n    }\\n\\n    //  Mark an issue as solved and distribute rewards\\n    function markSolved(\\n        uint repoId,\\n        uint issueId,\\n        uint pullReqId,\\n        address solver\\n    ) public {\\n        require(msg.sender != solver, \\\"Cannot declare yourself winner.\\\");\\n        Issue storage issue = repos[repoId].issues[issueId];\\n        require(!issue.solved, \\\"Issue already solved\\\");\\n        require(\\n            msg.sender == issue.creator,\\n            \\\"Only issue creator can mark as solved\\\"\\n        );\\n        updateWalletForSolvedIssue(solver, issue.prize);\\n\\n        issue.solved = true;\\n        issue.solver = solver;\\n\\n        rejectOthers(repoId, issueId, pullReqId, solver);\\n\\n        emit IssueSolved(\\n            repoId,\\n            issueId,\\n            pullReqId,\\n            msg.sender,\\n            solver,\\n            issue.prize\\n        );\\n    }\\n\\n    function updateWalletForSolvedIssue(address solver, uint prize) internal {\\n        wallets[solver].stats.wonStakeCount++;\\n        wallets[solver].stats.rewardsEarned += prize;\\n        wallets[solver].stats.withdraw_proceedings += prize;\\n    }\\n\\n    function rejectOthers(\\n        uint repoId,\\n        uint issueId,\\n        uint pullReqId,\\n        address solver\\n    ) public {\\n        Issue storage issue = repos[repoId].issues[issueId];\\n        // Deduct from other stakers and refund the remaining amount\\n        for (uint i = 0; i < issue.stakeCount; i++) {\\n            address staker = issue.stakes[i].staker;\\n            wallets[staker].stats.openAmtStaked =\\n                wallets[staker].stats.openAmtStaked -\\n                issue.stakes[i].amt;\\n            if (staker == solver && issue.stakes[i].pullReqId == pullReqId) {\\n                wallets[solver].stats.withdraw_proceedings += issue\\n                    .stakes[i]\\n                    .amt;\\n                continue;\\n            }\\n\\n            uint deduction = ((issue.stakes[i].amt / issue.stakeCount) *\\n                DEDUCTION_FACTOR);\\n            uint refund = issue.stakes[i].amt - deduction;\\n            wallets[staker].stats.lostStakeCount++;\\n            wallets[staker].stats.lost_refund += refund;\\n            wallets[staker].stats.withdraw_proceedings -= refund;\\n        }\\n    }\\n\\n    // Withdraw refund balance\\n    function withdraw_reward() public payable {\\n        uint amount = wallets[msg.sender].stats.withdraw_proceedings;\\n        require(amount > 0, \\\"Nothing to withdraw.\\\");\\n        wallets[msg.sender].stats.withdraw_proceedings = 0;\\n        bool success = s_token.transferFrom(address(this), msg.sender, amount);\\n        require(success, \\\"Transfer failed.\\\");\\n    }\\n\\n    function getBasicWalletDetails()\\n        public\\n        view\\n        returns (\\n            string memory gitUsername,\\n            uint lostStakeCount,\\n            uint wonStakeCount\\n        )\\n    {\\n        Wallet storage wallet = wallets[msg.sender];\\n        return (\\n            wallet.gitUsername,\\n            wallet.stats.lostStakeCount,\\n            wallet.stats.wonStakeCount\\n        );\\n    }\\n\\n    function getStakingWalletDetails()\\n        public\\n        view\\n        returns (\\n            uint totalAmtStaked,\\n            uint openAmtStaked,\\n            uint totalStakes,\\n            uint openStakes\\n        )\\n    {\\n        Wallet storage wallet = wallets[msg.sender];\\n        return (\\n            wallet.stats.totalAmtStaked,\\n            wallet.stats.openAmtStaked,\\n            wallet.stats.totalStakes,\\n            wallet.stats.openStakes\\n        );\\n    }\\n\\n    function getRewardsWalletDetails()\\n        public\\n        view\\n        returns (\\n            uint rewardsEarned,\\n            uint withdraw_proceedings,\\n            uint lost_refund\\n        )\\n    {\\n        Wallet storage wallet = wallets[msg.sender];\\n        return (\\n            wallet.stats.rewardsEarned,\\n            wallet.stats.withdraw_proceedings,\\n            wallet.stats.lost_refund\\n        );\\n    }\\n\\n    function getIssueStats()\\n        public\\n        view\\n        returns (\\n            uint totalPriceAmt_SetByMe,\\n            uint openPriceAmt_SetByMe,\\n            uint totalIssues_SetByMe,\\n            uint openIssues_SetByMe\\n        )\\n    {\\n        Wallet storage wallet = wallets[msg.sender];\\n        return (\\n            wallet.issueStats.totalPriceAmt_SetByMe,\\n            wallet.issueStats.openPriceAmt_SetByMe,\\n            wallet.issueStats.totalIssues_SetByMe,\\n            wallet.issueStats.openIssues_SetByMe\\n        );\\n    }\\n\\n    function getTotalStakeAmount(\\n        uint repoId,\\n        uint issueId\\n    ) public view returns (uint256) {\\n        Issue storage issue = repos[repoId].issues[issueId];\\n        return issue.totalStakeAmt;\\n    }\\n\\n    function getTotalStakers(\\n        uint repoId,\\n        uint issueId\\n    ) public view returns (uint256) {\\n        Issue storage issue = repos[repoId].issues[issueId];\\n        return issue.stakeCount;\\n    }\\n\\n    function getIssue(\\n        uint repoId,\\n        uint issueId\\n    )\\n        public\\n        view\\n        returns (\\n            address creator,\\n            uint prize,\\n            bool solved,\\n            address solver,\\n            uint stakeCount,\\n            uint totalStakeAmt\\n        )\\n    {\\n        Issue storage issue = repos[repoId].issues[issueId];\\n        require(issue.creator != address(0), \\\"Issue does not exist\\\");\\n        return (\\n            issue.creator,\\n            issue.prize,\\n            issue.solved,\\n            issue.solver,\\n            issue.stakeCount,\\n            issue.totalStakeAmt\\n        );\\n    }\\n\\n    function getStakeCount(\\n        uint repoId,\\n        uint issueId\\n    ) public view returns (uint) {\\n        return repos[repoId].issues[issueId].stakeCount;\\n    }\\n\\n    function getStake(\\n        uint repoId,\\n        uint issueId,\\n        uint index\\n    ) public view returns (address staker, uint amt) {\\n        Issue storage issue = repos[repoId].issues[issueId];\\n        Stake storage stake = issue.stakes[index];\\n        require(issue.creator != address(0), \\\"Issue does not exist\\\");\\n        return (stake.staker, stake.amt);\\n    }\\n\\n    function getEstDeductionRateOnIssue(\\n        uint repoId,\\n        uint issueId,\\n        uint approx_amt\\n    ) public view returns (uint) {\\n        Issue storage issue = repos[repoId].issues[issueId];\\n        uint deduction = ((approx_amt / issue.stakeCount) * DEDUCTION_FACTOR);\\n        return deduction;\\n    }\\n\\n    function getDeductionFactor() public pure returns (uint) {\\n        return DEDUCTION_FACTOR;\\n    }\\n\\n    function getSoldTokens() public view returns (uint) {\\n        return soldTokens;\\n    }\\n}\\n\",\"keccak256\":\"0x7aecc52e6ff086f070278fd5beaf856cab04e83fc8a1b71e78b8244d6c38442f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405260006002553480156200001657600080fd5b506040516200388c3803806200388c83398181016040528101906200003c919062000122565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000154565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000ea82620000bd565b9050919050565b620000fc81620000dd565b81146200010857600080fd5b50565b6000815190506200011c81620000f1565b92915050565b6000602082840312156200013b576200013a620000b8565b5b60006200014b848285016200010b565b91505092915050565b608051613715620001776000396000818161122501526116b501526137156000f3fe6080604052600436106101665760003560e01c8063a6ceaeb8116100d1578063e9a7897e1161008a578063f2435c0211610064578063f2435c0214610516578063f55ddd0614610532578063fc0a8a9a1461056f578063fecf0fdd1461059857610166565b8063e9a7897e1461048d578063e9af88e514610497578063eb02b3a1146104d457610166565b8063a6ceaeb8146103b2578063af421564146103dd578063bd097e2114610406578063c6a7188614610410578063dba6335f14610439578063e80ba91d1461046457610166565b80634c1809cf116101235780634c1809cf14610277578063582e2bb7146102a557806365156b31146102e257806389b08f111461030d5780639be3a1dd1461034c578063a534130f1461037557610166565b80630b121c041461016b578063434dcdeb1461018757806344d3a72f146101c4578063479fbb5b146101ef5780634863d2031461021d5780634949a3d51461024a575b600080fd5b610185600480360381019061018091906124a8565b6105d6565b005b34801561019357600080fd5b506101ae60048036038101906101a991906124fb565b610aa6565b6040516101bb9190612537565b60405180910390f35b3480156101d057600080fd5b506101d9610ac4565b6040516101e69190612537565b60405180910390f35b3480156101fb57600080fd5b50610204610acd565b6040516102149493929190612552565b60405180910390f35b34801561022957600080fd5b50610232610b45565b60405161024193929190612627565b60405180910390f35b34801561025657600080fd5b5061025f610c39565b60405161026e93929190612665565b60405180910390f35b34801561028357600080fd5b5061028c610ca4565b60405161029c9493929190612552565b60405180910390f35b3480156102b157600080fd5b506102cc60048036038101906102c7919061269c565b610d1c565b6040516102d99190612537565b60405180910390f35b3480156102ee57600080fd5b506102f7610d55565b604051610304919061275b565b60405180910390f35b34801561031957600080fd5b50610334600480360381019061032f91906127b4565b610d7b565b604051610343939291906128fc565b60405180910390f35b34801561035857600080fd5b50610373600480360381019061036e919061293c565b610ec4565b005b34801561038157600080fd5b5061039c6004803603810190610397919061269c565b611119565b6040516103a99190612537565b60405180910390f35b3480156103be57600080fd5b506103c7611152565b6040516103d49190612537565b60405180910390f35b3480156103e957600080fd5b5061040460048036038101906103ff91906129a3565b61115c565b005b61040e611223565b005b34801561041c57600080fd5b506104376004803603810190610432919061293c565b61132e565b005b34801561044557600080fd5b5061044e6116b3565b60405161045b91906129f2565b60405180910390f35b34801561047057600080fd5b5061048b6004803603810190610486919061269c565b6116d7565b005b61049561188f565b005b3480156104a357600080fd5b506104be60048036038101906104b9919061269c565b611a51565b6040516104cb9190612537565b60405180910390f35b3480156104e057600080fd5b506104fb60048036038101906104f6919061269c565b611a85565b60405161050d96959493929190612a28565b60405180910390f35b610530600480360381019061052b9190612a89565b611bcd565b005b34801561053e57600080fd5b50610559600480360381019061055491906124a8565b61218b565b6040516105669190612537565b60405180910390f35b34801561057b57600080fd5b5061059660048036038101906105919190612c25565b6121e2565b005b3480156105a457600080fd5b506105bf60048036038101906105ba91906124a8565b612236565b6040516105cd929190612c81565b60405180910390f35b6000806000858152602001908152602001600020905060008160000160008581526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610698576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068f90612cf6565b60405180910390fd5b60058310156106dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d390612d88565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161073d93929190612da8565b6020604051808303816000875af115801561075c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107809190612e0b565b90508015610a9e57338260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083826001018190555060008260020160006101000a81548160ff02191690831515021790555060008260020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600082600301819055506000826004018190555082600101600081548092919061085e90612e67565b9190505550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0160020160008154809291906108b990612e67565b9190505550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a01600301600081548092919061091490612e67565b919050555083600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a016000015461096a9190612eaf565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a016000018190555083600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0160010154610a049190612eaf565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a01600101819055503373ffffffffffffffffffffffffffffffffffffffff1685877fdbf4c4d27b5e34bbf881be7dac886bcea215531446ee302000785e7ed5fd16b487604051610a959190612537565b60405180910390a45b505050505050565b60006020528060005260406000206000915090508060010154905081565b6000600a905090565b6000806000806000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600a016000015481600a016001015482600a016002015483600a016003015494509450945094505090919293565b60606000806000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000181600101600001548260010160010154828054610bad90612f12565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd990612f12565b8015610c265780601f10610bfb57610100808354040283529160200191610c26565b820191906000526020600020905b815481529060010190602001808311610c0957829003601f168201915b5050505050925093509350935050909192565b600080600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600101600601548160010160070154826001016008015493509350935050909192565b6000806000806000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806001016002015481600101600301548260010160040154836001016005015494509450945094505090919293565b60008060008085815260200190815260200160002060000160008481526020019081526020016000209050806003015491505092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052806000526040600020600091509050806000018054610d9e90612f12565b80601f0160208091040260200160405190810160405280929190818152602001828054610dca90612f12565b8015610e175780601f10610dec57610100808354040283529160200191610e17565b820191906000526020600020905b815481529060010190602001808311610dfa57829003601f168201915b505050505090806001016040518061012001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815250509080600a01604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905083565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610f32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2990612f8f565b60405180910390fd5b6000806000868152602001908152602001600020600001600085815260200190815260200160002090508060020160009054906101000a900460ff1615610fae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa590612ffb565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611040576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110379061308d565b60405180910390fd5b61104e828260010154612347565b60018160020160006101000a81548160ff021916908315150217905550818160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506110ba8585858561132e565b8173ffffffffffffffffffffffffffffffffffffffff1684867f13dd60dc57dccdd98cc55a56e1a70e630e2bb3da3a379c80baac65b206c15c748633866001015460405161110a939291906130ad565b60405180910390a45050505050565b60008060008085815260200190815260200160002060000160008481526020019081526020016000209050806004015491505092915050565b6000600254905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b81526004016111bb929190612c81565b6020604051808303816000875af11580156111da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fe9190612e0b565b90508061120a57600080fd5b816002546112189190612eaf565b600281905550505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461127b57600080fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330346040518463ffffffff1660e01b81526004016112dc93929190612da8565b6020604051808303816000875af11580156112fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131f9190612e0b565b90508061132b57600080fd5b50565b60008060008681526020019081526020016000206000016000858152602001908152602001600020905060005b81600301548110156116ab57600082600501600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082600501600083815260200190815260200160002060010154600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016003015461140d91906130e4565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600301819055508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480156114a857508483600501600084815260200190815260200160002060020154145b156115275782600501600083815260200190815260200160002060010154600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600701600082825461151a9190612eaf565b925050819055505061169e565b6000600a8460030154856005016000868152602001908152602001600020600101546115539190613147565b61155d9190613178565b90506000818560050160008681526020019081526020016000206001015461158591906130e4565b9050600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160000160008154809291906115dd90612e67565b919050555080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160080160008282546116379190612eaf565b9250508190555080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600701600082825461169391906130e4565b925050819055505050505b808060010191505061135b565b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600084815260200190815260200160002060000160008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611794576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178b90613206565b60405180910390fd5b60018160020160006101000a81548160ff0219169083151502179055506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd308460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600101546040518463ffffffff1660e01b815260040161183a93929190612da8565b6020604051808303816000875af1158015611859573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187d9190612e0b565b90508061188957600080fd5b50505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016007015490506000811161191c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191390613272565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600701819055506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033856040518463ffffffff1660e01b81526004016119c893929190612da8565b6020604051808303816000875af11580156119e7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0b9190612e0b565b905080611a4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a44906132de565b60405180910390fd5b5050565b6000806000848152602001908152602001600020600001600083815260200190815260200160002060030154905092915050565b60008060008060008060008060008a815260200190815260200160002060000160008981526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611b4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4290613206565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600101548260020160009054906101000a900460ff168360020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600301548560040154965096509650965096509650509295509295509295565b600a811015611c11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c089061334a565b60405180910390fd5b6000806000868152602001908152602001600020600001600085815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611ccd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cc4906133b6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d5790613206565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611df2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611de990613422565b60405180910390fd5b8060020160009054906101000a900460ff1615611e44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e3b90612ffb565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401611ea593929190612da8565b6020604051808303816000875af1158015611ec4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee89190612e0b565b9050801561218357816003016000815480929190611f0590612e67565b9190505550838260050160008460030154815260200190815260200160002060020181905550338260050160008460030154815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082826005016000846003015481526020019081526020016000206001018190555082826004016000828254611fbb9190612eaf565b9250508190555082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160020160008282546120179190612eaf565b9250508190555082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160030160008282546120739190612eaf565b92505081905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160040160008154809291906120d090612e67565b9190505550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600501600081548092919061212b90612e67565b91905055503373ffffffffffffffffffffffffffffffffffffffff1685877f3cd238153c5778271c2e7ada60fdaa0b505d1a851387c3cad46a39089e6c1df6878760405161217a929190613442565b60405180910390a45b505050505050565b600080600080868152602001908152602001600020600001600085815260200190815260200160002090506000600a8260030154856121ca9190613147565b6121d49190613178565b905080925050509392505050565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019081612231919061360d565b505050565b60008060008060008781526020019081526020016000206000016000868152602001908152602001600020905060008160050160008681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361230f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161230690613206565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010154935093505050935093915050565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600101600081548092919061239d90612e67565b919050555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160060160008282546123f79190612eaf565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160070160008282546124539190612eaf565b925050819055505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61248581612472565b811461249057600080fd5b50565b6000813590506124a28161247c565b92915050565b6000806000606084860312156124c1576124c0612468565b5b60006124cf86828701612493565b93505060206124e086828701612493565b92505060406124f186828701612493565b9150509250925092565b60006020828403121561251157612510612468565b5b600061251f84828501612493565b91505092915050565b61253181612472565b82525050565b600060208201905061254c6000830184612528565b92915050565b60006080820190506125676000830187612528565b6125746020830186612528565b6125816040830185612528565b61258e6060830184612528565b95945050505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156125d15780820151818401526020810190506125b6565b60008484015250505050565b6000601f19601f8301169050919050565b60006125f982612597565b61260381856125a2565b93506126138185602086016125b3565b61261c816125dd565b840191505092915050565b6000606082019050818103600083015261264181866125ee565b90506126506020830185612528565b61265d6040830184612528565b949350505050565b600060608201905061267a6000830186612528565b6126876020830185612528565b6126946040830184612528565b949350505050565b600080604083850312156126b3576126b2612468565b5b60006126c185828601612493565b92505060206126d285828601612493565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061272161271c612717846126dc565b6126fc565b6126dc565b9050919050565b600061273382612706565b9050919050565b600061274582612728565b9050919050565b6127558161273a565b82525050565b6000602082019050612770600083018461274c565b92915050565b6000612781826126dc565b9050919050565b61279181612776565b811461279c57600080fd5b50565b6000813590506127ae81612788565b92915050565b6000602082840312156127ca576127c9612468565b5b60006127d88482850161279f565b91505092915050565b6127ea81612472565b82525050565b6101208201600082015161280760008501826127e1565b50602082015161281a60208501826127e1565b50604082015161282d60408501826127e1565b50606082015161284060608501826127e1565b50608082015161285360808501826127e1565b5060a082015161286660a08501826127e1565b5060c082015161287960c08501826127e1565b5060e082015161288c60e08501826127e1565b506101008201516128a16101008501826127e1565b50505050565b6080820160008201516128bd60008501826127e1565b5060208201516128d060208501826127e1565b5060408201516128e360408501826127e1565b5060608201516128f660608501826127e1565b50505050565b60006101c082019050818103600083015261291781866125ee565b905061292660208301856127f0565b6129346101408301846128a7565b949350505050565b6000806000806080858703121561295657612955612468565b5b600061296487828801612493565b945050602061297587828801612493565b935050604061298687828801612493565b92505060606129978782880161279f565b91505092959194509250565b600080604083850312156129ba576129b9612468565b5b60006129c88582860161279f565b92505060206129d985828601612493565b9150509250929050565b6129ec81612776565b82525050565b6000602082019050612a0760008301846129e3565b92915050565b60008115159050919050565b612a2281612a0d565b82525050565b600060c082019050612a3d60008301896129e3565b612a4a6020830188612528565b612a576040830187612a19565b612a6460608301866129e3565b612a716080830185612528565b612a7e60a0830184612528565b979650505050505050565b60008060008060808587031215612aa357612aa2612468565b5b6000612ab187828801612493565b9450506020612ac287828801612493565b9350506040612ad387828801612493565b9250506060612ae487828801612493565b91505092959194509250565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612b32826125dd565b810181811067ffffffffffffffff82111715612b5157612b50612afa565b5b80604052505050565b6000612b6461245e565b9050612b708282612b29565b919050565b600067ffffffffffffffff821115612b9057612b8f612afa565b5b612b99826125dd565b9050602081019050919050565b82818337600083830152505050565b6000612bc8612bc384612b75565b612b5a565b905082815260208101848484011115612be457612be3612af5565b5b612bef848285612ba6565b509392505050565b600082601f830112612c0c57612c0b612af0565b5b8135612c1c848260208601612bb5565b91505092915050565b60008060408385031215612c3c57612c3b612468565b5b6000612c4a8582860161279f565b925050602083013567ffffffffffffffff811115612c6b57612c6a61246d565b5b612c7785828601612bf7565b9150509250929050565b6000604082019050612c9660008301856129e3565b612ca36020830184612528565b9392505050565b7f497373756520616c726561647920657869737473000000000000000000000000600082015250565b6000612ce06014836125a2565b9150612ceb82612caa565b602082019050919050565b60006020820190508181036000830152612d0f81612cd3565b9050919050565b7f5072697a6520616d6f756e74206d75737420626520677265617465722074686160008201527f6e20350000000000000000000000000000000000000000000000000000000000602082015250565b6000612d726023836125a2565b9150612d7d82612d16565b604082019050919050565b60006020820190508181036000830152612da181612d65565b9050919050565b6000606082019050612dbd60008301866129e3565b612dca60208301856129e3565b612dd76040830184612528565b949350505050565b612de881612a0d565b8114612df357600080fd5b50565b600081519050612e0581612ddf565b92915050565b600060208284031215612e2157612e20612468565b5b6000612e2f84828501612df6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612e7282612472565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612ea457612ea3612e38565b5b600182019050919050565b6000612eba82612472565b9150612ec583612472565b9250828201905080821115612edd57612edc612e38565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612f2a57607f821691505b602082108103612f3d57612f3c612ee3565b5b50919050565b7f43616e6e6f74206465636c61726520796f757273656c662077696e6e65722e00600082015250565b6000612f79601f836125a2565b9150612f8482612f43565b602082019050919050565b60006020820190508181036000830152612fa881612f6c565b9050919050565b7f497373756520616c726561647920736f6c766564000000000000000000000000600082015250565b6000612fe56014836125a2565b9150612ff082612faf565b602082019050919050565b6000602082019050818103600083015261301481612fd8565b9050919050565b7f4f6e6c792069737375652063726561746f722063616e206d61726b206173207360008201527f6f6c766564000000000000000000000000000000000000000000000000000000602082015250565b60006130776025836125a2565b91506130828261301b565b604082019050919050565b600060208201905081810360008301526130a68161306a565b9050919050565b60006060820190506130c26000830186612528565b6130cf60208301856129e3565b6130dc6040830184612528565b949350505050565b60006130ef82612472565b91506130fa83612472565b925082820390508181111561311257613111612e38565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061315282612472565b915061315d83612472565b92508261316d5761316c613118565b5b828204905092915050565b600061318382612472565b915061318e83612472565b925082820261319c81612472565b915082820484148315176131b3576131b2612e38565b5b5092915050565b7f497373756520646f6573206e6f74206578697374000000000000000000000000600082015250565b60006131f06014836125a2565b91506131fb826131ba565b602082019050919050565b6000602082019050818103600083015261321f816131e3565b9050919050565b7f4e6f7468696e6720746f2077697468647261772e000000000000000000000000600082015250565b600061325c6014836125a2565b915061326782613226565b602082019050919050565b6000602082019050818103600083015261328b8161324f565b9050919050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b60006132c86010836125a2565b91506132d382613292565b602082019050919050565b600060208201905081810360008301526132f7816132bb565b9050919050565b7f4d696e205374616b6520416d6f756e7420697320302e3031204753542e000000600082015250565b6000613334601d836125a2565b915061333f826132fe565b602082019050919050565b6000602082019050818103600083015261336381613327565b9050919050565b7f49737375652063726561746f722063616e6e6f74207374616b652e0000000000600082015250565b60006133a0601b836125a2565b91506133ab8261336a565b602082019050919050565b600060208201905081810360008301526133cf81613393565b9050919050565b7f49737375652063726561746f722063616e6e6f74207374616b65000000000000600082015250565b600061340c601a836125a2565b9150613417826133d6565b602082019050919050565b6000602082019050818103600083015261343b816133ff565b9050919050565b60006040820190506134576000830185612528565b6134646020830184612528565b9392505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026134cd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613490565b6134d78683613490565b95508019841693508086168417925050509392505050565b600061350a61350561350084612472565b6126fc565b612472565b9050919050565b6000819050919050565b613524836134ef565b61353861353082613511565b84845461349d565b825550505050565b600090565b61354d613540565b61355881848461351b565b505050565b5b8181101561357c57613571600082613545565b60018101905061355e565b5050565b601f8211156135c1576135928161346b565b61359b84613480565b810160208510156135aa578190505b6135be6135b685613480565b83018261355d565b50505b505050565b600082821c905092915050565b60006135e4600019846008026135c6565b1980831691505092915050565b60006135fd83836135d3565b9150826002028217905092915050565b61361682612597565b67ffffffffffffffff81111561362f5761362e612afa565b5b6136398254612f12565b613644828285613580565b600060209050601f8311600181146136775760008415613665578287015190505b61366f85826135f1565b8655506136d7565b601f1984166136858661346b565b60005b828110156136ad57848901518255600182019150602085019450602081019050613688565b868310156136ca57848901516136c6601f8916826135d3565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220e88eea5bd59e1ade911063c66758ee1d630820b5d39074662c6f5a75d6c43da664736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436106101665760003560e01c8063a6ceaeb8116100d1578063e9a7897e1161008a578063f2435c0211610064578063f2435c0214610516578063f55ddd0614610532578063fc0a8a9a1461056f578063fecf0fdd1461059857610166565b8063e9a7897e1461048d578063e9af88e514610497578063eb02b3a1146104d457610166565b8063a6ceaeb8146103b2578063af421564146103dd578063bd097e2114610406578063c6a7188614610410578063dba6335f14610439578063e80ba91d1461046457610166565b80634c1809cf116101235780634c1809cf14610277578063582e2bb7146102a557806365156b31146102e257806389b08f111461030d5780639be3a1dd1461034c578063a534130f1461037557610166565b80630b121c041461016b578063434dcdeb1461018757806344d3a72f146101c4578063479fbb5b146101ef5780634863d2031461021d5780634949a3d51461024a575b600080fd5b610185600480360381019061018091906124a8565b6105d6565b005b34801561019357600080fd5b506101ae60048036038101906101a991906124fb565b610aa6565b6040516101bb9190612537565b60405180910390f35b3480156101d057600080fd5b506101d9610ac4565b6040516101e69190612537565b60405180910390f35b3480156101fb57600080fd5b50610204610acd565b6040516102149493929190612552565b60405180910390f35b34801561022957600080fd5b50610232610b45565b60405161024193929190612627565b60405180910390f35b34801561025657600080fd5b5061025f610c39565b60405161026e93929190612665565b60405180910390f35b34801561028357600080fd5b5061028c610ca4565b60405161029c9493929190612552565b60405180910390f35b3480156102b157600080fd5b506102cc60048036038101906102c7919061269c565b610d1c565b6040516102d99190612537565b60405180910390f35b3480156102ee57600080fd5b506102f7610d55565b604051610304919061275b565b60405180910390f35b34801561031957600080fd5b50610334600480360381019061032f91906127b4565b610d7b565b604051610343939291906128fc565b60405180910390f35b34801561035857600080fd5b50610373600480360381019061036e919061293c565b610ec4565b005b34801561038157600080fd5b5061039c6004803603810190610397919061269c565b611119565b6040516103a99190612537565b60405180910390f35b3480156103be57600080fd5b506103c7611152565b6040516103d49190612537565b60405180910390f35b3480156103e957600080fd5b5061040460048036038101906103ff91906129a3565b61115c565b005b61040e611223565b005b34801561041c57600080fd5b506104376004803603810190610432919061293c565b61132e565b005b34801561044557600080fd5b5061044e6116b3565b60405161045b91906129f2565b60405180910390f35b34801561047057600080fd5b5061048b6004803603810190610486919061269c565b6116d7565b005b61049561188f565b005b3480156104a357600080fd5b506104be60048036038101906104b9919061269c565b611a51565b6040516104cb9190612537565b60405180910390f35b3480156104e057600080fd5b506104fb60048036038101906104f6919061269c565b611a85565b60405161050d96959493929190612a28565b60405180910390f35b610530600480360381019061052b9190612a89565b611bcd565b005b34801561053e57600080fd5b50610559600480360381019061055491906124a8565b61218b565b6040516105669190612537565b60405180910390f35b34801561057b57600080fd5b5061059660048036038101906105919190612c25565b6121e2565b005b3480156105a457600080fd5b506105bf60048036038101906105ba91906124a8565b612236565b6040516105cd929190612c81565b60405180910390f35b6000806000858152602001908152602001600020905060008160000160008581526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610698576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068f90612cf6565b60405180910390fd5b60058310156106dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d390612d88565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161073d93929190612da8565b6020604051808303816000875af115801561075c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107809190612e0b565b90508015610a9e57338260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083826001018190555060008260020160006101000a81548160ff02191690831515021790555060008260020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600082600301819055506000826004018190555082600101600081548092919061085e90612e67565b9190505550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0160020160008154809291906108b990612e67565b9190505550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a01600301600081548092919061091490612e67565b919050555083600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a016000015461096a9190612eaf565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a016000018190555083600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0160010154610a049190612eaf565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a01600101819055503373ffffffffffffffffffffffffffffffffffffffff1685877fdbf4c4d27b5e34bbf881be7dac886bcea215531446ee302000785e7ed5fd16b487604051610a959190612537565b60405180910390a45b505050505050565b60006020528060005260406000206000915090508060010154905081565b6000600a905090565b6000806000806000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600a016000015481600a016001015482600a016002015483600a016003015494509450945094505090919293565b60606000806000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000181600101600001548260010160010154828054610bad90612f12565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd990612f12565b8015610c265780601f10610bfb57610100808354040283529160200191610c26565b820191906000526020600020905b815481529060010190602001808311610c0957829003601f168201915b5050505050925093509350935050909192565b600080600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600101600601548160010160070154826001016008015493509350935050909192565b6000806000806000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806001016002015481600101600301548260010160040154836001016005015494509450945094505090919293565b60008060008085815260200190815260200160002060000160008481526020019081526020016000209050806003015491505092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052806000526040600020600091509050806000018054610d9e90612f12565b80601f0160208091040260200160405190810160405280929190818152602001828054610dca90612f12565b8015610e175780601f10610dec57610100808354040283529160200191610e17565b820191906000526020600020905b815481529060010190602001808311610dfa57829003601f168201915b505050505090806001016040518061012001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815250509080600a01604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905083565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610f32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2990612f8f565b60405180910390fd5b6000806000868152602001908152602001600020600001600085815260200190815260200160002090508060020160009054906101000a900460ff1615610fae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa590612ffb565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611040576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110379061308d565b60405180910390fd5b61104e828260010154612347565b60018160020160006101000a81548160ff021916908315150217905550818160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506110ba8585858561132e565b8173ffffffffffffffffffffffffffffffffffffffff1684867f13dd60dc57dccdd98cc55a56e1a70e630e2bb3da3a379c80baac65b206c15c748633866001015460405161110a939291906130ad565b60405180910390a45050505050565b60008060008085815260200190815260200160002060000160008481526020019081526020016000209050806004015491505092915050565b6000600254905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b81526004016111bb929190612c81565b6020604051808303816000875af11580156111da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fe9190612e0b565b90508061120a57600080fd5b816002546112189190612eaf565b600281905550505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461127b57600080fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330346040518463ffffffff1660e01b81526004016112dc93929190612da8565b6020604051808303816000875af11580156112fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131f9190612e0b565b90508061132b57600080fd5b50565b60008060008681526020019081526020016000206000016000858152602001908152602001600020905060005b81600301548110156116ab57600082600501600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082600501600083815260200190815260200160002060010154600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016003015461140d91906130e4565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600301819055508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480156114a857508483600501600084815260200190815260200160002060020154145b156115275782600501600083815260200190815260200160002060010154600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600701600082825461151a9190612eaf565b925050819055505061169e565b6000600a8460030154856005016000868152602001908152602001600020600101546115539190613147565b61155d9190613178565b90506000818560050160008681526020019081526020016000206001015461158591906130e4565b9050600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160000160008154809291906115dd90612e67565b919050555080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160080160008282546116379190612eaf565b9250508190555080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600701600082825461169391906130e4565b925050819055505050505b808060010191505061135b565b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600084815260200190815260200160002060000160008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611794576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178b90613206565b60405180910390fd5b60018160020160006101000a81548160ff0219169083151502179055506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd308460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600101546040518463ffffffff1660e01b815260040161183a93929190612da8565b6020604051808303816000875af1158015611859573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187d9190612e0b565b90508061188957600080fd5b50505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016007015490506000811161191c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191390613272565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600701819055506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033856040518463ffffffff1660e01b81526004016119c893929190612da8565b6020604051808303816000875af11580156119e7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0b9190612e0b565b905080611a4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a44906132de565b60405180910390fd5b5050565b6000806000848152602001908152602001600020600001600083815260200190815260200160002060030154905092915050565b60008060008060008060008060008a815260200190815260200160002060000160008981526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611b4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4290613206565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600101548260020160009054906101000a900460ff168360020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600301548560040154965096509650965096509650509295509295509295565b600a811015611c11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c089061334a565b60405180910390fd5b6000806000868152602001908152602001600020600001600085815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611ccd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cc4906133b6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d5790613206565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611df2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611de990613422565b60405180910390fd5b8060020160009054906101000a900460ff1615611e44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e3b90612ffb565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401611ea593929190612da8565b6020604051808303816000875af1158015611ec4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee89190612e0b565b9050801561218357816003016000815480929190611f0590612e67565b9190505550838260050160008460030154815260200190815260200160002060020181905550338260050160008460030154815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082826005016000846003015481526020019081526020016000206001018190555082826004016000828254611fbb9190612eaf565b9250508190555082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160020160008282546120179190612eaf565b9250508190555082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160030160008282546120739190612eaf565b92505081905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160040160008154809291906120d090612e67565b9190505550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600501600081548092919061212b90612e67565b91905055503373ffffffffffffffffffffffffffffffffffffffff1685877f3cd238153c5778271c2e7ada60fdaa0b505d1a851387c3cad46a39089e6c1df6878760405161217a929190613442565b60405180910390a45b505050505050565b600080600080868152602001908152602001600020600001600085815260200190815260200160002090506000600a8260030154856121ca9190613147565b6121d49190613178565b905080925050509392505050565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019081612231919061360d565b505050565b60008060008060008781526020019081526020016000206000016000868152602001908152602001600020905060008160050160008681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361230f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161230690613206565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010154935093505050935093915050565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600101600081548092919061239d90612e67565b919050555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160060160008282546123f79190612eaf565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160070160008282546124539190612eaf565b925050819055505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61248581612472565b811461249057600080fd5b50565b6000813590506124a28161247c565b92915050565b6000806000606084860312156124c1576124c0612468565b5b60006124cf86828701612493565b93505060206124e086828701612493565b92505060406124f186828701612493565b9150509250925092565b60006020828403121561251157612510612468565b5b600061251f84828501612493565b91505092915050565b61253181612472565b82525050565b600060208201905061254c6000830184612528565b92915050565b60006080820190506125676000830187612528565b6125746020830186612528565b6125816040830185612528565b61258e6060830184612528565b95945050505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156125d15780820151818401526020810190506125b6565b60008484015250505050565b6000601f19601f8301169050919050565b60006125f982612597565b61260381856125a2565b93506126138185602086016125b3565b61261c816125dd565b840191505092915050565b6000606082019050818103600083015261264181866125ee565b90506126506020830185612528565b61265d6040830184612528565b949350505050565b600060608201905061267a6000830186612528565b6126876020830185612528565b6126946040830184612528565b949350505050565b600080604083850312156126b3576126b2612468565b5b60006126c185828601612493565b92505060206126d285828601612493565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061272161271c612717846126dc565b6126fc565b6126dc565b9050919050565b600061273382612706565b9050919050565b600061274582612728565b9050919050565b6127558161273a565b82525050565b6000602082019050612770600083018461274c565b92915050565b6000612781826126dc565b9050919050565b61279181612776565b811461279c57600080fd5b50565b6000813590506127ae81612788565b92915050565b6000602082840312156127ca576127c9612468565b5b60006127d88482850161279f565b91505092915050565b6127ea81612472565b82525050565b6101208201600082015161280760008501826127e1565b50602082015161281a60208501826127e1565b50604082015161282d60408501826127e1565b50606082015161284060608501826127e1565b50608082015161285360808501826127e1565b5060a082015161286660a08501826127e1565b5060c082015161287960c08501826127e1565b5060e082015161288c60e08501826127e1565b506101008201516128a16101008501826127e1565b50505050565b6080820160008201516128bd60008501826127e1565b5060208201516128d060208501826127e1565b5060408201516128e360408501826127e1565b5060608201516128f660608501826127e1565b50505050565b60006101c082019050818103600083015261291781866125ee565b905061292660208301856127f0565b6129346101408301846128a7565b949350505050565b6000806000806080858703121561295657612955612468565b5b600061296487828801612493565b945050602061297587828801612493565b935050604061298687828801612493565b92505060606129978782880161279f565b91505092959194509250565b600080604083850312156129ba576129b9612468565b5b60006129c88582860161279f565b92505060206129d985828601612493565b9150509250929050565b6129ec81612776565b82525050565b6000602082019050612a0760008301846129e3565b92915050565b60008115159050919050565b612a2281612a0d565b82525050565b600060c082019050612a3d60008301896129e3565b612a4a6020830188612528565b612a576040830187612a19565b612a6460608301866129e3565b612a716080830185612528565b612a7e60a0830184612528565b979650505050505050565b60008060008060808587031215612aa357612aa2612468565b5b6000612ab187828801612493565b9450506020612ac287828801612493565b9350506040612ad387828801612493565b9250506060612ae487828801612493565b91505092959194509250565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612b32826125dd565b810181811067ffffffffffffffff82111715612b5157612b50612afa565b5b80604052505050565b6000612b6461245e565b9050612b708282612b29565b919050565b600067ffffffffffffffff821115612b9057612b8f612afa565b5b612b99826125dd565b9050602081019050919050565b82818337600083830152505050565b6000612bc8612bc384612b75565b612b5a565b905082815260208101848484011115612be457612be3612af5565b5b612bef848285612ba6565b509392505050565b600082601f830112612c0c57612c0b612af0565b5b8135612c1c848260208601612bb5565b91505092915050565b60008060408385031215612c3c57612c3b612468565b5b6000612c4a8582860161279f565b925050602083013567ffffffffffffffff811115612c6b57612c6a61246d565b5b612c7785828601612bf7565b9150509250929050565b6000604082019050612c9660008301856129e3565b612ca36020830184612528565b9392505050565b7f497373756520616c726561647920657869737473000000000000000000000000600082015250565b6000612ce06014836125a2565b9150612ceb82612caa565b602082019050919050565b60006020820190508181036000830152612d0f81612cd3565b9050919050565b7f5072697a6520616d6f756e74206d75737420626520677265617465722074686160008201527f6e20350000000000000000000000000000000000000000000000000000000000602082015250565b6000612d726023836125a2565b9150612d7d82612d16565b604082019050919050565b60006020820190508181036000830152612da181612d65565b9050919050565b6000606082019050612dbd60008301866129e3565b612dca60208301856129e3565b612dd76040830184612528565b949350505050565b612de881612a0d565b8114612df357600080fd5b50565b600081519050612e0581612ddf565b92915050565b600060208284031215612e2157612e20612468565b5b6000612e2f84828501612df6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612e7282612472565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612ea457612ea3612e38565b5b600182019050919050565b6000612eba82612472565b9150612ec583612472565b9250828201905080821115612edd57612edc612e38565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612f2a57607f821691505b602082108103612f3d57612f3c612ee3565b5b50919050565b7f43616e6e6f74206465636c61726520796f757273656c662077696e6e65722e00600082015250565b6000612f79601f836125a2565b9150612f8482612f43565b602082019050919050565b60006020820190508181036000830152612fa881612f6c565b9050919050565b7f497373756520616c726561647920736f6c766564000000000000000000000000600082015250565b6000612fe56014836125a2565b9150612ff082612faf565b602082019050919050565b6000602082019050818103600083015261301481612fd8565b9050919050565b7f4f6e6c792069737375652063726561746f722063616e206d61726b206173207360008201527f6f6c766564000000000000000000000000000000000000000000000000000000602082015250565b60006130776025836125a2565b91506130828261301b565b604082019050919050565b600060208201905081810360008301526130a68161306a565b9050919050565b60006060820190506130c26000830186612528565b6130cf60208301856129e3565b6130dc6040830184612528565b949350505050565b60006130ef82612472565b91506130fa83612472565b925082820390508181111561311257613111612e38565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061315282612472565b915061315d83612472565b92508261316d5761316c613118565b5b828204905092915050565b600061318382612472565b915061318e83612472565b925082820261319c81612472565b915082820484148315176131b3576131b2612e38565b5b5092915050565b7f497373756520646f6573206e6f74206578697374000000000000000000000000600082015250565b60006131f06014836125a2565b91506131fb826131ba565b602082019050919050565b6000602082019050818103600083015261321f816131e3565b9050919050565b7f4e6f7468696e6720746f2077697468647261772e000000000000000000000000600082015250565b600061325c6014836125a2565b915061326782613226565b602082019050919050565b6000602082019050818103600083015261328b8161324f565b9050919050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b60006132c86010836125a2565b91506132d382613292565b602082019050919050565b600060208201905081810360008301526132f7816132bb565b9050919050565b7f4d696e205374616b6520416d6f756e7420697320302e3031204753542e000000600082015250565b6000613334601d836125a2565b915061333f826132fe565b602082019050919050565b6000602082019050818103600083015261336381613327565b9050919050565b7f49737375652063726561746f722063616e6e6f74207374616b652e0000000000600082015250565b60006133a0601b836125a2565b91506133ab8261336a565b602082019050919050565b600060208201905081810360008301526133cf81613393565b9050919050565b7f49737375652063726561746f722063616e6e6f74207374616b65000000000000600082015250565b600061340c601a836125a2565b9150613417826133d6565b602082019050919050565b6000602082019050818103600083015261343b816133ff565b9050919050565b60006040820190506134576000830185612528565b6134646020830184612528565b9392505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026134cd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613490565b6134d78683613490565b95508019841693508086168417925050509392505050565b600061350a61350561350084612472565b6126fc565b612472565b9050919050565b6000819050919050565b613524836134ef565b61353861353082613511565b84845461349d565b825550505050565b600090565b61354d613540565b61355881848461351b565b505050565b5b8181101561357c57613571600082613545565b60018101905061355e565b5050565b601f8211156135c1576135928161346b565b61359b84613480565b810160208510156135aa578190505b6135be6135b685613480565b83018261355d565b50505b505050565b600082821c905092915050565b60006135e4600019846008026135c6565b1980831691505092915050565b60006135fd83836135d3565b9150826002028217905092915050565b61361682612597565b67ffffffffffffffff81111561362f5761362e612afa565b5b6136398254612f12565b613644828285613580565b600060209050601f8311600181146136775760008415613665578287015190505b61366f85826135f1565b8655506136d7565b601f1984166136858661346b565b60005b828110156136ad57848901518255600182019150602085019450602081019050613688565b868310156136ca57848901516136c6601f8916826135d3565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220e88eea5bd59e1ade911063c66758ee1d630820b5d39074662c6f5a75d6c43da664736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 155,
        "contract": "contracts/GitHubStaking.sol:GitHubStaking",
        "label": "repos",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(Repo)113_storage)"
      },
      {
        "astId": 160,
        "contract": "contracts/GitHubStaking.sol:GitHubStaking",
        "label": "wallets",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(Wallet)150_storage)"
      },
      {
        "astId": 172,
        "contract": "contracts/GitHubStaking.sol:GitHubStaking",
        "label": "soldTokens",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 175,
        "contract": "contracts/GitHubStaking.sol:GitHubStaking",
        "label": "s_token",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IERC20)77"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Wallet)150_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GitHubStaking.Wallet)",
        "numberOfBytes": "32",
        "value": "t_struct(Wallet)150_storage"
      },
      "t_mapping(t_uint256,t_struct(Issue)105_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GitHubStaking.Issue)",
        "numberOfBytes": "32",
        "value": "t_struct(Issue)105_storage"
      },
      "t_mapping(t_uint256,t_struct(Repo)113_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GitHubStaking.Repo)",
        "numberOfBytes": "32",
        "value": "t_struct(Repo)113_storage"
      },
      "t_mapping(t_uint256,t_struct(Stake)87_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GitHubStaking.Stake)",
        "numberOfBytes": "32",
        "value": "t_struct(Stake)87_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Issue)105_storage": {
        "encoding": "inplace",
        "label": "struct GitHubStaking.Issue",
        "members": [
          {
            "astId": 89,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 91,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "prize",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 93,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "solved",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 95,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "solver",
            "offset": 1,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 97,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "stakeCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 99,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "totalStakeAmt",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 104,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "stakes",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(Stake)87_storage)"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(IssueStats)141_storage": {
        "encoding": "inplace",
        "label": "struct GitHubStaking.IssueStats",
        "members": [
          {
            "astId": 134,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "totalPriceAmt_SetByMe",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 136,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "openPriceAmt_SetByMe",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 138,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "totalIssues_SetByMe",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 140,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "openIssues_SetByMe",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Repo)113_storage": {
        "encoding": "inplace",
        "label": "struct GitHubStaking.Repo",
        "members": [
          {
            "astId": 110,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "issues",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Issue)105_storage)"
          },
          {
            "astId": 112,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "issueCount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Stake)87_storage": {
        "encoding": "inplace",
        "label": "struct GitHubStaking.Stake",
        "members": [
          {
            "astId": 82,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "staker",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 84,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "amt",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 86,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "pullReqId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Wallet)150_storage": {
        "encoding": "inplace",
        "label": "struct GitHubStaking.Wallet",
        "members": [
          {
            "astId": 143,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "gitUsername",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 146,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "stats",
            "offset": 0,
            "slot": "1",
            "type": "t_struct(WalletStats)132_storage"
          },
          {
            "astId": 149,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "issueStats",
            "offset": 0,
            "slot": "10",
            "type": "t_struct(IssueStats)141_storage"
          }
        ],
        "numberOfBytes": "448"
      },
      "t_struct(WalletStats)132_storage": {
        "encoding": "inplace",
        "label": "struct GitHubStaking.WalletStats",
        "members": [
          {
            "astId": 115,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "lostStakeCount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 117,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "wonStakeCount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 119,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "totalAmtStaked",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 121,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "openAmtStaked",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 123,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "totalStakes",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 125,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "openStakes",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 127,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "rewardsEarned",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 129,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "withdraw_proceedings",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 131,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "lost_refund",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}