{
  "address": "0xAAd4F7BB5FB661181D500829e60010043833a85B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prize",
          "type": "uint256"
        }
      ],
      "name": "IssueCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pullReqId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "solver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prize",
          "type": "uint256"
        }
      ],
      "name": "IssueSolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pullReqId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "StakePlaced",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "username",
          "type": "string"
        }
      ],
      "name": "addUserToWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "prize",
          "type": "uint256"
        }
      ],
      "name": "createIssue",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBasicWalletDetails",
      "outputs": [
        {
          "internalType": "string",
          "name": "gitUsername",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "lostStakeCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wonStakeCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeductionFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "approx_amt",
          "type": "uint256"
        }
      ],
      "name": "getEstDeductionRateOnIssue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        }
      ],
      "name": "getIssue",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "prize",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "solved",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "solver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stakeCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalStakeAmt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIssueStats",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalPriceAmt_SetByMe",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "openPriceAmt_SetByMe",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalIssues_SetByMe",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "openIssues_SetByMe",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardsWalletDetails",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rewardsEarned",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "withdraw_proceedings",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lost_refund",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSoldTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getStake",
      "outputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        }
      ],
      "name": "getStakeCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakingWalletDetails",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalAmtStaked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "openAmtStaked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalStakes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "openStakes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        }
      ],
      "name": "getTotalStakeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        }
      ],
      "name": "getTotalStakers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pullReqId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "solver",
          "type": "address"
        }
      ],
      "name": "markSolved",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pullReqId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "solver",
          "type": "address"
        }
      ],
      "name": "rejectOthers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "repos",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "issueCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pullReqId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "stakeOnIssue",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "wallets",
      "outputs": [
        {
          "internalType": "string",
          "name": "gitUsername",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "lostStakeCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wonStakeCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAmtStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openAmtStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalStakes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openStakes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rewardsEarned",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdraw_proceedings",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lost_refund",
              "type": "uint256"
            }
          ],
          "internalType": "struct GitHubStaking.WalletStats",
          "name": "stats",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "totalPriceAmt_SetByMe",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openPriceAmt_SetByMe",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalIssues_SetByMe",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openIssues_SetByMe",
              "type": "uint256"
            }
          ],
          "internalType": "struct GitHubStaking.IssueStats",
          "name": "issueStats",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw_reward",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9f2eabdb45c6239264d1bf54371f2c8f4115b520a3b0ab6a74d8c14e7b6cbe61",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xAAd4F7BB5FB661181D500829e60010043833a85B",
    "transactionIndex": 0,
    "gasUsed": "2857303",
    "logsBloom": "0x
    "blockHash": "0x9d14c212cf5bad6fa3d7372d0f0b6868d95fbeb886ef46c1fbbf1e279d2cb711",
    "transactionHash": "0x9f2eabdb45c6239264d1bf54371f2c8f4115b520a3b0ab6a74d8c14e7b6cbe61",
    "logs": [],
    "blockNumber": 20683313,
    "cumulativeGasUsed": "2857303",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x72aC6A36de2f72BD39e9c782e9db0DCc41FEbfe2"
  ],
  "numDeployments": 1,
  "solcInputHash": "18e94f1fd96ec3b40dc091771ff0d09e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prize\",\"type\":\"uint256\"}],\"name\":\"IssueCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pullReqId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"solver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prize\",\"type\":\"uint256\"}],\"name\":\"IssueSolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pullReqId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"StakePlaced\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"addUserToWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prize\",\"type\":\"uint256\"}],\"name\":\"createIssue\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBasicWalletDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"gitUsername\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"lostStakeCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wonStakeCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeductionFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"approx_amt\",\"type\":\"uint256\"}],\"name\":\"getEstDeductionRateOnIssue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"}],\"name\":\"getIssue\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"prize\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"solved\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"solver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakeAmt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIssueStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalPriceAmt_SetByMe\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPriceAmt_SetByMe\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalIssues_SetByMe\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openIssues_SetByMe\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardsWalletDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardsEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdraw_proceedings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lost_refund\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSoldTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"}],\"name\":\"getStakeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingWalletDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAmtStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openAmtStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openStakes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"}],\"name\":\"getTotalStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"}],\"name\":\"getTotalStakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pullReqId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"solver\",\"type\":\"address\"}],\"name\":\"markSolved\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pullReqId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"solver\",\"type\":\"address\"}],\"name\":\"rejectOthers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"repos\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"issueCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pullReqId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"stakeOnIssue\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wallets\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"gitUsername\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lostStakeCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wonStakeCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmtStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openAmtStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openStakes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardsEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdraw_proceedings\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lost_refund\",\"type\":\"uint256\"}],\"internalType\":\"struct GitHubStaking.WalletStats\",\"name\":\"stats\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalPriceAmt_SetByMe\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPriceAmt_SetByMe\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalIssues_SetByMe\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openIssues_SetByMe\",\"type\":\"uint256\"}],\"internalType\":\"struct GitHubStaking.IssueStats\",\"name\":\"issueStats\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw_reward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GitHubStaking.sol\":\"GitHubStaking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/GitHubStaking.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.2 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract GitHubStaking {\\n    struct Stake {\\n        address staker;\\n        uint amt;\\n        uint pullReqId;\\n    }\\n    struct Issue {\\n        address creator;\\n        uint prize;\\n        bool solved;\\n        address solver;\\n        uint stakeCount;\\n        uint totalStakeAmt;\\n        mapping(uint => Stake) stakes; // index -> konsa address, kitna stakeAmt\\n    }\\n\\n    struct Repo {\\n        mapping(uint => Issue) issues;\\n        uint issueCount;\\n    }\\n    struct WalletStats {\\n        uint lostStakeCount;\\n        uint wonStakeCount;\\n        uint totalAmtStaked;\\n        uint openAmtStaked;\\n        uint totalStakes;\\n        uint openStakes;\\n        uint rewardsEarned;\\n        uint withdraw_proceedings;\\n        uint lost_refund;\\n    }\\n\\n    struct IssueStats {\\n        uint totalPriceAmt_SetByMe;\\n        uint openPriceAmt_SetByMe;\\n        uint totalIssues_SetByMe;\\n        uint openIssues_SetByMe;\\n    }\\n\\n    struct Wallet {\\n        string gitUsername;\\n        WalletStats stats;\\n        IssueStats issueStats;\\n    }\\n\\n    mapping(uint => Repo) public repos; // RepoId -> Repo\\n    mapping(address => Wallet) public wallets;\\n\\n    uint256 private constant MIN_PRIZE = 5;\\n    uint private constant DEDUCTION_FACTOR = 10;\\n    uint256 private constant MIN_STAKE = 10;\\n    uint private soldTokens = 0;\\n\\n    IERC20 public s_token;\\n\\n    // events\\n    event IssueCreated(\\n        uint256 indexed repoId,\\n        uint256 indexed issueId,\\n        address indexed creator,\\n        uint256 prize\\n    );\\n\\n    event IssueSolved(\\n        uint256 indexed repoId,\\n        uint256 indexed issueId,\\n        uint256 pullReqId,\\n        address creator,\\n        address indexed solver,\\n        uint256 prize\\n    );\\n\\n    event StakePlaced(\\n        uint256 indexed repoId,\\n        uint256 indexed issueId,\\n        uint256 pullReqId,\\n        address indexed staker,\\n        uint256 amt\\n    );\\n\\n    constructor(address token) {\\n        s_token = IERC20(token);\\n    }\\n\\n    function addUserToWallet(address wallet, string memory username) public {\\n        wallets[wallet].gitUsername = username;\\n    }\\n\\n    // Create a new issue with a prize\\n    function createIssue(\\n        uint repoId,\\n        uint issueId,\\n        uint256 prize\\n    ) public payable {\\n        // require(\\n        //     wallets[msg.sender].gitUsername != \\\"\\\",\\n        //     \\\"Wallet not found in contract.\\\"\\n        // );\\n\\n        Repo storage repo = repos[repoId];\\n        Issue storage issue = repo.issues[issueId];\\n        require(issue.creator == address(0), \\\"Issue already exists\\\");\\n        require(prize >= MIN_PRIZE, \\\"Prize amount must be greater than 5\\\");\\n\\n        bool success = s_token.transferFrom(msg.sender, address(this), prize);\\n        if (success) {\\n            issue.creator = msg.sender;\\n            issue.prize = prize;\\n            issue.solved = false;\\n            issue.solver = address(0);\\n            issue.stakeCount = 0;\\n            issue.totalStakeAmt = 0;\\n            repo.issueCount++;\\n\\n            wallets[msg.sender].issueStats.totalIssues_SetByMe++;\\n            wallets[msg.sender].issueStats.openIssues_SetByMe++;\\n\\n            wallets[msg.sender].issueStats.totalPriceAmt_SetByMe =\\n                wallets[msg.sender].issueStats.totalPriceAmt_SetByMe +\\n                prize;\\n            wallets[msg.sender].issueStats.openPriceAmt_SetByMe =\\n                wallets[msg.sender].issueStats.openPriceAmt_SetByMe +\\n                prize;\\n\\n            emit IssueCreated(repoId, issueId, msg.sender, prize);\\n        }\\n    }\\n\\n    // Stake an amount on an issue\\n    function stakeOnIssue(\\n        uint repoId,\\n        uint issueId,\\n        uint pullReqId,\\n        uint256 amt\\n    ) public payable {\\n        require(amt >= MIN_STAKE, \\\"Min Stake Amount is 0.01 GST.\\\");\\n        Issue storage issue = repos[repoId].issues[issueId];\\n        require(issue.creator != msg.sender, \\\"Issue creator cannot stake.\\\");\\n        require(issue.creator != address(0), \\\"Issue does not exist\\\"); //address(0) represents the zero address in Solidity.\\n        require(issue.creator != msg.sender, \\\"Issue creator cannot stake\\\");\\n        require(!issue.solved, \\\"Issue already solved\\\");\\n        bool success = s_token.transferFrom(msg.sender, address(this), amt);\\n        if (success) {\\n            issue.stakeCount++;\\n            issue.stakes[issue.stakeCount].pullReqId = pullReqId;\\n            issue.stakes[issue.stakeCount].staker = msg.sender;\\n            issue.stakes[issue.stakeCount].amt = amt;\\n            issue.totalStakeAmt += amt;\\n\\n            wallets[msg.sender].stats.totalAmtStaked += amt;\\n            wallets[msg.sender].stats.openAmtStaked += amt;\\n\\n            wallets[msg.sender].stats.totalStakes++;\\n            wallets[msg.sender].stats.openStakes++;\\n\\n            emit StakePlaced(repoId, issueId, pullReqId, msg.sender, amt);\\n        }\\n    }\\n\\n    //  Mark an issue as solved and distribute rewards\\n    function markSolved(\\n        uint repoId,\\n        uint issueId,\\n        uint pullReqId,\\n        address solver\\n    ) public {\\n        require(msg.sender != solver, \\\"Cannot declare yourself winner.\\\");\\n        Issue storage issue = repos[repoId].issues[issueId];\\n        require(!issue.solved, \\\"Issue already solved\\\");\\n        require(\\n            msg.sender == issue.creator,\\n            \\\"Only issue creator can mark as solved\\\"\\n        );\\n        updateWalletForSolvedIssue(solver, issue.prize);\\n\\n        issue.solved = true;\\n        issue.solver = solver;\\n\\n        rejectOthers(repoId, issueId, pullReqId, solver);\\n\\n        emit IssueSolved(\\n            repoId,\\n            issueId,\\n            pullReqId,\\n            msg.sender,\\n            solver,\\n            issue.prize\\n        );\\n    }\\n\\n    function updateWalletForSolvedIssue(address solver, uint prize) internal {\\n        wallets[solver].stats.wonStakeCount++;\\n        wallets[solver].stats.rewardsEarned += prize;\\n        wallets[solver].stats.withdraw_proceedings += prize;\\n    }\\n\\n    function rejectOthers(\\n        uint repoId,\\n        uint issueId,\\n        uint pullReqId,\\n        address solver\\n    ) public {\\n        Issue storage issue = repos[repoId].issues[issueId];\\n        // Deduct from other stakers and refund the remaining amount\\n        for (uint i = 0; i < issue.stakeCount; i++) {\\n            address staker = issue.stakes[i].staker;\\n            wallets[staker].stats.openAmtStaked =\\n                wallets[staker].stats.openAmtStaked -\\n                issue.stakes[i].amt;\\n            if (staker == solver && issue.stakes[i].pullReqId == pullReqId) {\\n                wallets[solver].stats.withdraw_proceedings += issue\\n                    .stakes[i]\\n                    .amt;\\n                continue;\\n            }\\n\\n            uint deduction = ((issue.stakes[i].amt / issue.stakeCount) *\\n                DEDUCTION_FACTOR);\\n            uint refund = issue.stakes[i].amt - deduction;\\n            wallets[staker].stats.lostStakeCount++;\\n            wallets[staker].stats.lost_refund += refund;\\n            wallets[staker].stats.withdraw_proceedings -= refund;\\n        }\\n    }\\n\\n    // Withdraw refund balance\\n    function withdraw_reward() public payable {\\n        uint amount = wallets[msg.sender].stats.withdraw_proceedings;\\n        require(amount > 0, \\\"Nothing to withdraw.\\\");\\n        wallets[msg.sender].stats.withdraw_proceedings = 0;\\n        bool success = s_token.transfer(msg.sender, amount);\\n        require(success, \\\"Transfer failed.\\\");\\n        soldTokens = soldTokens + amount;\\n    }\\n\\n    function getBasicWalletDetails()\\n        public\\n        view\\n        returns (\\n            string memory gitUsername,\\n            uint lostStakeCount,\\n            uint wonStakeCount\\n        )\\n    {\\n        Wallet storage wallet = wallets[msg.sender];\\n        return (\\n            wallet.gitUsername,\\n            wallet.stats.lostStakeCount,\\n            wallet.stats.wonStakeCount\\n        );\\n    }\\n\\n    function getStakingWalletDetails()\\n        public\\n        view\\n        returns (\\n            uint totalAmtStaked,\\n            uint openAmtStaked,\\n            uint totalStakes,\\n            uint openStakes\\n        )\\n    {\\n        Wallet storage wallet = wallets[msg.sender];\\n        return (\\n            wallet.stats.totalAmtStaked,\\n            wallet.stats.openAmtStaked,\\n            wallet.stats.totalStakes,\\n            wallet.stats.openStakes\\n        );\\n    }\\n\\n    function getRewardsWalletDetails()\\n        public\\n        view\\n        returns (\\n            uint rewardsEarned,\\n            uint withdraw_proceedings,\\n            uint lost_refund\\n        )\\n    {\\n        Wallet storage wallet = wallets[msg.sender];\\n        return (\\n            wallet.stats.rewardsEarned,\\n            wallet.stats.withdraw_proceedings,\\n            wallet.stats.lost_refund\\n        );\\n    }\\n\\n    function getIssueStats()\\n        public\\n        view\\n        returns (\\n            uint totalPriceAmt_SetByMe,\\n            uint openPriceAmt_SetByMe,\\n            uint totalIssues_SetByMe,\\n            uint openIssues_SetByMe\\n        )\\n    {\\n        Wallet storage wallet = wallets[msg.sender];\\n        return (\\n            wallet.issueStats.totalPriceAmt_SetByMe,\\n            wallet.issueStats.openPriceAmt_SetByMe,\\n            wallet.issueStats.totalIssues_SetByMe,\\n            wallet.issueStats.openIssues_SetByMe\\n        );\\n    }\\n\\n    function getTotalStakeAmount(\\n        uint repoId,\\n        uint issueId\\n    ) public view returns (uint256) {\\n        Issue storage issue = repos[repoId].issues[issueId];\\n        return issue.totalStakeAmt;\\n    }\\n\\n    function getTotalStakers(\\n        uint repoId,\\n        uint issueId\\n    ) public view returns (uint256) {\\n        Issue storage issue = repos[repoId].issues[issueId];\\n        return issue.stakeCount;\\n    }\\n\\n    function getIssue(\\n        uint repoId,\\n        uint issueId\\n    )\\n        public\\n        view\\n        returns (\\n            address creator,\\n            uint prize,\\n            bool solved,\\n            address solver,\\n            uint stakeCount,\\n            uint totalStakeAmt\\n        )\\n    {\\n        Issue storage issue = repos[repoId].issues[issueId];\\n        require(issue.creator != address(0), \\\"Issue does not exist\\\");\\n        return (\\n            issue.creator,\\n            issue.prize,\\n            issue.solved,\\n            issue.solver,\\n            issue.stakeCount,\\n            issue.totalStakeAmt\\n        );\\n    }\\n\\n    function getStakeCount(\\n        uint repoId,\\n        uint issueId\\n    ) public view returns (uint) {\\n        return repos[repoId].issues[issueId].stakeCount;\\n    }\\n\\n    function getStake(\\n        uint repoId,\\n        uint issueId,\\n        uint index\\n    ) public view returns (address staker, uint amt) {\\n        Issue storage issue = repos[repoId].issues[issueId];\\n        Stake storage stake = issue.stakes[index];\\n        require(issue.creator != address(0), \\\"Issue does not exist\\\");\\n        return (stake.staker, stake.amt);\\n    }\\n\\n    function getEstDeductionRateOnIssue(\\n        uint repoId,\\n        uint issueId,\\n        uint approx_amt\\n    ) public view returns (uint) {\\n        Issue storage issue = repos[repoId].issues[issueId];\\n        uint deduction = ((approx_amt / issue.stakeCount) * DEDUCTION_FACTOR);\\n        return deduction;\\n    }\\n\\n    function getDeductionFactor() public pure returns (uint) {\\n        return DEDUCTION_FACTOR;\\n    }\\n\\n    function getSoldTokens() public view returns(uint) {\\n        return soldTokens;\\n    }\\n}\\n\",\"keccak256\":\"0x0fd0020aa4a15ac96bfe8efa9b1af53506cf86282d8f136c88d8e760774186ec\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260006002553480156200001657600080fd5b506040516200338b3803806200338b83398181016040528101906200003c9190620000ee565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000120565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b68262000089565b9050919050565b620000c881620000a9565b8114620000d457600080fd5b50565b600081519050620000e881620000bd565b92915050565b60006020828403121562000107576200010662000084565b5b60006200011784828501620000d7565b91505092915050565b61325b80620001306000396000f3fe60806040526004361061012a5760003560e01c80639be3a1dd116100ab578063e9af88e51161006f578063e9af88e5146103d4578063eb02b3a114610411578063f2435c0214610453578063f55ddd061461046f578063fc0a8a9a146104ac578063fecf0fdd146104d55761012a565b80639be3a1dd14610310578063a534130f14610339578063a6ceaeb814610376578063c6a71886146103a1578063e9a7897e146103ca5761012a565b80634949a3d5116100f25780634949a3d51461020e5780634c1809cf1461023b578063582e2bb71461026957806365156b31146102a657806389b08f11146102d15761012a565b80630b121c041461012f578063434dcdeb1461014b57806344d3a72f14610188578063479fbb5b146101b35780634863d203146101e1575b600080fd5b61014960048036038101906101449190612049565b610513565b005b34801561015757600080fd5b50610172600480360381019061016d919061209c565b6109e3565b60405161017f91906120d8565b60405180910390f35b34801561019457600080fd5b5061019d610a01565b6040516101aa91906120d8565b60405180910390f35b3480156101bf57600080fd5b506101c8610a0a565b6040516101d894939291906120f3565b60405180910390f35b3480156101ed57600080fd5b506101f6610a82565b604051610205939291906121c8565b60405180910390f35b34801561021a57600080fd5b50610223610b76565b60405161023293929190612206565b60405180910390f35b34801561024757600080fd5b50610250610be1565b60405161026094939291906120f3565b60405180910390f35b34801561027557600080fd5b50610290600480360381019061028b919061223d565b610c59565b60405161029d91906120d8565b60405180910390f35b3480156102b257600080fd5b506102bb610c92565b6040516102c891906122fc565b60405180910390f35b3480156102dd57600080fd5b506102f860048036038101906102f39190612355565b610cb8565b6040516103079392919061249d565b60405180910390f35b34801561031c57600080fd5b50610337600480360381019061033291906124dd565b610e01565b005b34801561034557600080fd5b50610360600480360381019061035b919061223d565b611056565b60405161036d91906120d8565b60405180910390f35b34801561038257600080fd5b5061038b61108f565b60405161039891906120d8565b60405180910390f35b3480156103ad57600080fd5b506103c860048036038101906103c391906124dd565b611099565b005b6103d261141e565b005b3480156103e057600080fd5b506103fb60048036038101906103f6919061223d565b6115f2565b60405161040891906120d8565b60405180910390f35b34801561041d57600080fd5b506104386004803603810190610433919061223d565b611626565b60405161044a9695949392919061256e565b60405180910390f35b61046d600480360381019061046891906125cf565b61176e565b005b34801561047b57600080fd5b5061049660048036038101906104919190612049565b611d2c565b6040516104a391906120d8565b60405180910390f35b3480156104b857600080fd5b506104d360048036038101906104ce919061276b565b611d83565b005b3480156104e157600080fd5b506104fc60048036038101906104f79190612049565b611dd7565b60405161050a9291906127c7565b60405180910390f35b6000806000858152602001908152602001600020905060008160000160008581526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cc9061283c565b60405180910390fd5b6005831015610619576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610610906128ce565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161067a939291906128ee565b6020604051808303816000875af1158015610699573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bd9190612951565b905080156109db57338260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083826001018190555060008260020160006101000a81548160ff02191690831515021790555060008260020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600082600301819055506000826004018190555082600101600081548092919061079b906129ad565b9190505550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0160020160008154809291906107f6906129ad565b9190505550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a016003016000815480929190610851906129ad565b919050555083600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a01600001546108a791906129f5565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a016000018190555083600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a016001015461094191906129f5565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a01600101819055503373ffffffffffffffffffffffffffffffffffffffff1685877fdbf4c4d27b5e34bbf881be7dac886bcea215531446ee302000785e7ed5fd16b4876040516109d291906120d8565b60405180910390a45b505050505050565b60006020528060005260406000206000915090508060010154905081565b6000600a905090565b6000806000806000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600a016000015481600a016001015482600a016002015483600a016003015494509450945094505090919293565b60606000806000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000181600101600001548260010160010154828054610aea90612a58565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1690612a58565b8015610b635780601f10610b3857610100808354040283529160200191610b63565b820191906000526020600020905b815481529060010190602001808311610b4657829003601f168201915b5050505050925093509350935050909192565b600080600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600101600601548160010160070154826001016008015493509350935050909192565b6000806000806000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806001016002015481600101600301548260010160040154836001016005015494509450945094505090919293565b60008060008085815260200190815260200160002060000160008481526020019081526020016000209050806003015491505092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052806000526040600020600091509050806000018054610cdb90612a58565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0790612a58565b8015610d545780601f10610d2957610100808354040283529160200191610d54565b820191906000526020600020905b815481529060010190602001808311610d3757829003601f168201915b505050505090806001016040518061012001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815250509080600a01604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905083565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610e6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6690612ad5565b60405180910390fd5b6000806000868152602001908152602001600020600001600085815260200190815260200160002090508060020160009054906101000a900460ff1615610eeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee290612b41565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7490612bd3565b60405180910390fd5b610f8b828260010154611ee8565b60018160020160006101000a81548160ff021916908315150217905550818160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ff785858585611099565b8173ffffffffffffffffffffffffffffffffffffffff1684867f13dd60dc57dccdd98cc55a56e1a70e630e2bb3da3a379c80baac65b206c15c748633866001015460405161104793929190612bf3565b60405180910390a45050505050565b60008060008085815260200190815260200160002060000160008481526020019081526020016000209050806004015491505092915050565b6000600254905090565b60008060008681526020019081526020016000206000016000858152602001908152602001600020905060005b816003015481101561141657600082600501600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082600501600083815260200190815260200160002060010154600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600301546111789190612c2a565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600301819055508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614801561121357508483600501600084815260200190815260200160002060020154145b156112925782600501600083815260200190815260200160002060010154600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600701600082825461128591906129f5565b9250508190555050611409565b6000600a8460030154856005016000868152602001908152602001600020600101546112be9190612c8d565b6112c89190612cbe565b9050600081856005016000868152602001908152602001600020600101546112f09190612c2a565b9050600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000016000815480929190611348906129ad565b919050555080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160080160008282546113a291906129f5565b9250508190555080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160070160008282546113fe9190612c2a565b925050819055505050505b80806001019150506110c6565b505050505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600701549050600081116114ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a290612d4c565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600701819055506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016115559291906127c7565b6020604051808303816000875af1158015611574573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115989190612951565b9050806115da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d190612db8565b60405180910390fd5b816002546115e891906129f5565b6002819055505050565b6000806000848152602001908152602001600020600001600083815260200190815260200160002060030154905092915050565b60008060008060008060008060008a815260200190815260200160002060000160008981526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036116ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e390612e24565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600101548260020160009054906101000a900460ff168360020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600301548560040154965096509650965096509650509295509295509295565b600a8110156117b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a990612e90565b60405180910390fd5b6000806000868152602001908152602001600020600001600085815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361186e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186590612efc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611901576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f890612e24565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611993576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161198a90612f68565b60405180910390fd5b8060020160009054906101000a900460ff16156119e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119dc90612b41565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401611a46939291906128ee565b6020604051808303816000875af1158015611a65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a899190612951565b90508015611d2457816003016000815480929190611aa6906129ad565b9190505550838260050160008460030154815260200190815260200160002060020181905550338260050160008460030154815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082826005016000846003015481526020019081526020016000206001018190555082826004016000828254611b5c91906129f5565b9250508190555082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016002016000828254611bb891906129f5565b9250508190555082600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016003016000828254611c1491906129f5565b92505081905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016004016000815480929190611c71906129ad565b9190505550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016005016000815480929190611ccc906129ad565b91905055503373ffffffffffffffffffffffffffffffffffffffff1685877f3cd238153c5778271c2e7ada60fdaa0b505d1a851387c3cad46a39089e6c1df68787604051611d1b929190612f88565b60405180910390a45b505050505050565b600080600080868152602001908152602001600020600001600085815260200190815260200160002090506000600a826003015485611d6b9190612c8d565b611d759190612cbe565b905080925050509392505050565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019081611dd29190613153565b505050565b60008060008060008781526020019081526020016000206000016000868152602001908152602001600020905060008160050160008681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611eb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ea790612e24565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010154935093505050935093915050565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016001016000815480929190611f3e906129ad565b919050555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016006016000828254611f9891906129f5565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016007016000828254611ff491906129f5565b925050819055505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61202681612013565b811461203157600080fd5b50565b6000813590506120438161201d565b92915050565b60008060006060848603121561206257612061612009565b5b600061207086828701612034565b935050602061208186828701612034565b925050604061209286828701612034565b9150509250925092565b6000602082840312156120b2576120b1612009565b5b60006120c084828501612034565b91505092915050565b6120d281612013565b82525050565b60006020820190506120ed60008301846120c9565b92915050565b600060808201905061210860008301876120c9565b61211560208301866120c9565b61212260408301856120c9565b61212f60608301846120c9565b95945050505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612172578082015181840152602081019050612157565b60008484015250505050565b6000601f19601f8301169050919050565b600061219a82612138565b6121a48185612143565b93506121b4818560208601612154565b6121bd8161217e565b840191505092915050565b600060608201905081810360008301526121e2818661218f565b90506121f160208301856120c9565b6121fe60408301846120c9565b949350505050565b600060608201905061221b60008301866120c9565b61222860208301856120c9565b61223560408301846120c9565b949350505050565b6000806040838503121561225457612253612009565b5b600061226285828601612034565b925050602061227385828601612034565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006122c26122bd6122b88461227d565b61229d565b61227d565b9050919050565b60006122d4826122a7565b9050919050565b60006122e6826122c9565b9050919050565b6122f6816122db565b82525050565b600060208201905061231160008301846122ed565b92915050565b60006123228261227d565b9050919050565b61233281612317565b811461233d57600080fd5b50565b60008135905061234f81612329565b92915050565b60006020828403121561236b5761236a612009565b5b600061237984828501612340565b91505092915050565b61238b81612013565b82525050565b610120820160008201516123a86000850182612382565b5060208201516123bb6020850182612382565b5060408201516123ce6040850182612382565b5060608201516123e16060850182612382565b5060808201516123f46080850182612382565b5060a082015161240760a0850182612382565b5060c082015161241a60c0850182612382565b5060e082015161242d60e0850182612382565b50610100820151612442610100850182612382565b50505050565b60808201600082015161245e6000850182612382565b5060208201516124716020850182612382565b5060408201516124846040850182612382565b5060608201516124976060850182612382565b50505050565b60006101c08201905081810360008301526124b8818661218f565b90506124c76020830185612391565b6124d5610140830184612448565b949350505050565b600080600080608085870312156124f7576124f6612009565b5b600061250587828801612034565b945050602061251687828801612034565b935050604061252787828801612034565b925050606061253887828801612340565b91505092959194509250565b61254d81612317565b82525050565b60008115159050919050565b61256881612553565b82525050565b600060c0820190506125836000830189612544565b61259060208301886120c9565b61259d604083018761255f565b6125aa6060830186612544565b6125b760808301856120c9565b6125c460a08301846120c9565b979650505050505050565b600080600080608085870312156125e9576125e8612009565b5b60006125f787828801612034565b945050602061260887828801612034565b935050604061261987828801612034565b925050606061262a87828801612034565b91505092959194509250565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6126788261217e565b810181811067ffffffffffffffff8211171561269757612696612640565b5b80604052505050565b60006126aa611fff565b90506126b6828261266f565b919050565b600067ffffffffffffffff8211156126d6576126d5612640565b5b6126df8261217e565b9050602081019050919050565b82818337600083830152505050565b600061270e612709846126bb565b6126a0565b90508281526020810184848401111561272a5761272961263b565b5b6127358482856126ec565b509392505050565b600082601f83011261275257612751612636565b5b81356127628482602086016126fb565b91505092915050565b6000806040838503121561278257612781612009565b5b600061279085828601612340565b925050602083013567ffffffffffffffff8111156127b1576127b061200e565b5b6127bd8582860161273d565b9150509250929050565b60006040820190506127dc6000830185612544565b6127e960208301846120c9565b9392505050565b7f497373756520616c726561647920657869737473000000000000000000000000600082015250565b6000612826601483612143565b9150612831826127f0565b602082019050919050565b6000602082019050818103600083015261285581612819565b9050919050565b7f5072697a6520616d6f756e74206d75737420626520677265617465722074686160008201527f6e20350000000000000000000000000000000000000000000000000000000000602082015250565b60006128b8602383612143565b91506128c38261285c565b604082019050919050565b600060208201905081810360008301526128e7816128ab565b9050919050565b60006060820190506129036000830186612544565b6129106020830185612544565b61291d60408301846120c9565b949350505050565b61292e81612553565b811461293957600080fd5b50565b60008151905061294b81612925565b92915050565b60006020828403121561296757612966612009565b5b60006129758482850161293c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006129b882612013565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036129ea576129e961297e565b5b600182019050919050565b6000612a0082612013565b9150612a0b83612013565b9250828201905080821115612a2357612a2261297e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612a7057607f821691505b602082108103612a8357612a82612a29565b5b50919050565b7f43616e6e6f74206465636c61726520796f757273656c662077696e6e65722e00600082015250565b6000612abf601f83612143565b9150612aca82612a89565b602082019050919050565b60006020820190508181036000830152612aee81612ab2565b9050919050565b7f497373756520616c726561647920736f6c766564000000000000000000000000600082015250565b6000612b2b601483612143565b9150612b3682612af5565b602082019050919050565b60006020820190508181036000830152612b5a81612b1e565b9050919050565b7f4f6e6c792069737375652063726561746f722063616e206d61726b206173207360008201527f6f6c766564000000000000000000000000000000000000000000000000000000602082015250565b6000612bbd602583612143565b9150612bc882612b61565b604082019050919050565b60006020820190508181036000830152612bec81612bb0565b9050919050565b6000606082019050612c0860008301866120c9565b612c156020830185612544565b612c2260408301846120c9565b949350505050565b6000612c3582612013565b9150612c4083612013565b9250828203905081811115612c5857612c5761297e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612c9882612013565b9150612ca383612013565b925082612cb357612cb2612c5e565b5b828204905092915050565b6000612cc982612013565b9150612cd483612013565b9250828202612ce281612013565b91508282048414831517612cf957612cf861297e565b5b5092915050565b7f4e6f7468696e6720746f2077697468647261772e000000000000000000000000600082015250565b6000612d36601483612143565b9150612d4182612d00565b602082019050919050565b60006020820190508181036000830152612d6581612d29565b9050919050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b6000612da2601083612143565b9150612dad82612d6c565b602082019050919050565b60006020820190508181036000830152612dd181612d95565b9050919050565b7f497373756520646f6573206e6f74206578697374000000000000000000000000600082015250565b6000612e0e601483612143565b9150612e1982612dd8565b602082019050919050565b60006020820190508181036000830152612e3d81612e01565b9050919050565b7f4d696e205374616b6520416d6f756e7420697320302e3031204753542e000000600082015250565b6000612e7a601d83612143565b9150612e8582612e44565b602082019050919050565b60006020820190508181036000830152612ea981612e6d565b9050919050565b7f49737375652063726561746f722063616e6e6f74207374616b652e0000000000600082015250565b6000612ee6601b83612143565b9150612ef182612eb0565b602082019050919050565b60006020820190508181036000830152612f1581612ed9565b9050919050565b7f49737375652063726561746f722063616e6e6f74207374616b65000000000000600082015250565b6000612f52601a83612143565b9150612f5d82612f1c565b602082019050919050565b60006020820190508181036000830152612f8181612f45565b9050919050565b6000604082019050612f9d60008301856120c9565b612faa60208301846120c9565b9392505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026130137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612fd6565b61301d8683612fd6565b95508019841693508086168417925050509392505050565b600061305061304b61304684612013565b61229d565b612013565b9050919050565b6000819050919050565b61306a83613035565b61307e61307682613057565b848454612fe3565b825550505050565b600090565b613093613086565b61309e818484613061565b505050565b5b818110156130c2576130b760008261308b565b6001810190506130a4565b5050565b601f821115613107576130d881612fb1565b6130e184612fc6565b810160208510156130f0578190505b6131046130fc85612fc6565b8301826130a3565b50505b505050565b600082821c905092915050565b600061312a6000198460080261310c565b1980831691505092915050565b60006131438383613119565b9150826002028217905092915050565b61315c82612138565b67ffffffffffffffff81111561317557613174612640565b5b61317f8254612a58565b61318a8282856130c6565b600060209050601f8311600181146131bd57600084156131ab578287015190505b6131b58582613137565b86555061321d565b601f1984166131cb86612fb1565b60005b828110156131f3578489015182556001820191506020850194506020810190506131ce565b86831015613210578489015161320c601f891682613119565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220a80453597cb8315fb2df2c4bfe7f8586cd335ece2e7ab35900611615d1ac5f6164736f6c63430008180033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 863,
        "contract": "contracts/GitHubStaking.sol:GitHubStaking",
        "label": "repos",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(Repo)821_storage)"
      },
      {
        "astId": 868,
        "contract": "contracts/GitHubStaking.sol:GitHubStaking",
        "label": "wallets",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(Wallet)858_storage)"
      },
      {
        "astId": 880,
        "contract": "contracts/GitHubStaking.sol:GitHubStaking",
        "label": "soldTokens",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 883,
        "contract": "contracts/GitHubStaking.sol:GitHubStaking",
        "label": "s_token",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IERC20)729"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)729": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Wallet)858_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GitHubStaking.Wallet)",
        "numberOfBytes": "32",
        "value": "t_struct(Wallet)858_storage"
      },
      "t_mapping(t_uint256,t_struct(Issue)813_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GitHubStaking.Issue)",
        "numberOfBytes": "32",
        "value": "t_struct(Issue)813_storage"
      },
      "t_mapping(t_uint256,t_struct(Repo)821_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GitHubStaking.Repo)",
        "numberOfBytes": "32",
        "value": "t_struct(Repo)821_storage"
      },
      "t_mapping(t_uint256,t_struct(Stake)795_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GitHubStaking.Stake)",
        "numberOfBytes": "32",
        "value": "t_struct(Stake)795_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Issue)813_storage": {
        "encoding": "inplace",
        "label": "struct GitHubStaking.Issue",
        "members": [
          {
            "astId": 797,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 799,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "prize",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 801,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "solved",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 803,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "solver",
            "offset": 1,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 805,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "stakeCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 807,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "totalStakeAmt",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 812,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "stakes",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(Stake)795_storage)"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(IssueStats)849_storage": {
        "encoding": "inplace",
        "label": "struct GitHubStaking.IssueStats",
        "members": [
          {
            "astId": 842,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "totalPriceAmt_SetByMe",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 844,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "openPriceAmt_SetByMe",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 846,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "totalIssues_SetByMe",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 848,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "openIssues_SetByMe",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Repo)821_storage": {
        "encoding": "inplace",
        "label": "struct GitHubStaking.Repo",
        "members": [
          {
            "astId": 818,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "issues",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Issue)813_storage)"
          },
          {
            "astId": 820,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "issueCount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Stake)795_storage": {
        "encoding": "inplace",
        "label": "struct GitHubStaking.Stake",
        "members": [
          {
            "astId": 790,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "staker",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 792,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "amt",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 794,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "pullReqId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Wallet)858_storage": {
        "encoding": "inplace",
        "label": "struct GitHubStaking.Wallet",
        "members": [
          {
            "astId": 851,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "gitUsername",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 854,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "stats",
            "offset": 0,
            "slot": "1",
            "type": "t_struct(WalletStats)840_storage"
          },
          {
            "astId": 857,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "issueStats",
            "offset": 0,
            "slot": "10",
            "type": "t_struct(IssueStats)849_storage"
          }
        ],
        "numberOfBytes": "448"
      },
      "t_struct(WalletStats)840_storage": {
        "encoding": "inplace",
        "label": "struct GitHubStaking.WalletStats",
        "members": [
          {
            "astId": 823,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "lostStakeCount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 825,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "wonStakeCount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 827,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "totalAmtStaked",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 829,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "openAmtStaked",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 831,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "totalStakes",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 833,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "openStakes",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 835,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "rewardsEarned",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 837,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "withdraw_proceedings",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 839,
            "contract": "contracts/GitHubStaking.sol:GitHubStaking",
            "label": "lost_refund",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}